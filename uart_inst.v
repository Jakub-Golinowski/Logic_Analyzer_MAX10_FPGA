// Copyright (C) 2016  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.


// Generated by Quartus Prime Version 16.1 (Build Build 200 11/30/2016)
// Created on Wed Jan 11 03:01:00 2017

uart uart_inst
(
	.reset(reset_sig) ,	// input  reset_sig
	.txclk(txclk_sig) ,	// input  txclk_sig
	.ld_tx_data(ld_tx_data_sig) ,	// input  ld_tx_data_sig
	.tx_data(tx_data_sig) ,	// input [7:0] tx_data_sig
	.tx_enable(tx_enable_sig) ,	// input  tx_enable_sig
	.tx_out(tx_out_sig) ,	// output  tx_out_sig
	.tx_empty(tx_empty_sig) ,	// output  tx_empty_sig
	.rxclk(rxclk_sig) ,	// input  rxclk_sig
	.uld_rx_data(uld_rx_data_sig) ,	// input  uld_rx_data_sig
	.rx_data(rx_data_sig) ,	// output [7:0] rx_data_sig
	.rx_enable(rx_enable_sig) ,	// input  rx_enable_sig
	.rx_in(rx_in_sig) ,	// input  rx_in_sig
	.rx_empty(rx_empty_sig) 	// output  rx_empty_sig
);

